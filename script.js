// –ò–≥—Ä–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let products = 0;
let passiveIncome = 0;

// –£–ª—É—á—à–µ–Ω–∏—è
let upgrades = [
    { name: '–ó–∞–∫—É—Ä–∏—Ç—å', count: 0, baseCost: 50, power: 1 },
    { name: '–ë–∞—Ö–Ω—É—Ç—å', count: 0, baseCost: 100, power: 2 },
    { name: '–ù–∞–æ—Ä–∞—Ç—å', count: 0, baseCost: 500, power: 10 },
    { name: '–°–ï–û', count: 0, baseCost: 2000, power: 50 }
];

// –°—Å—ã–ª–∫–∏ –Ω–∞ DOM-—ç–ª–µ–º–µ–Ω—Ç—ã
const productCountEl = document.getElementById('product-count-large');
const incomeTextEl = document.getElementById('income-text');
const clickBtnEl = document.getElementById('click-btn');
const upgradeGridEl = document.getElementById('upgrade-grid');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏–π
function initUpgrades() {
    upgradeGridEl.innerHTML = '';
    upgrades.forEach((upgrade, index) => {
        const card = document.createElement('div');
        card.className = 'upgrade-card';

        const info = document.createElement('div');
        info.className = 'upgrade-info';

        const name = document.createElement('h3');
        name.textContent = upgrade.name;

        const cost = document.createElement('div');
        cost.className = 'upgrade-cost';
        cost.textContent = `${upgrade.baseCost} üíº`;

        info.appendChild(name);
        info.appendChild(cost);

        const btn = document.createElement('button');
        btn.className = 'upgrade-btn';
        btn.textContent = '–ö—É–ø–∏—Ç—å';
        btn.addEventListener('click', () => buyUpgrade(index));

        card.appendChild(info);
        card.appendChild(btn);
        upgradeGridEl.appendChild(card);
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞
clickBtnEl.addEventListener('click', () => {
    products += 1; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏–ª–∞ = 1
    updateDisplay();
});

// –ü–æ–∫—É–ø–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è
function buyUpgrade(index) {
    const upgrade = upgrades[index];
    if (products >= upgrade.baseCost) {
        products -= upgrade.baseCost;
        upgrade.count++;
        upgrade.baseCost = Math.floor(upgrade.baseCost * 1.6);
        passiveIncome += upgrade.power;
        updatePassiveIncome();
        updateDisplay();
        initUpgrades();
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
function updatePassiveIncome() {
    passiveIncome = upgrades.reduce((sum, u) => sum + u.count * u.power, 0);
    incomeTextEl.textContent = `+${passiveIncome}/—Å–µ–∫`;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function updateDisplay() {
    productCountEl.textContent = `üì¶ ${Math.floor(products)}`;
}

// –¢–∏–∫ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
setInterval(() => {
    products += passiveIncome;
    updateDisplay();
}, 1000);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
initUpgrades();
updatePassiveIncome();
updateDisplay();
