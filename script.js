let products = 0;
let clickPower = 1;
let passiveIncome = 0;
let upgrades = [
    { name: '–ó–∞–∫—É—Ä–∏—Ç—å —Å–∏–∂–∫—É', count: 0, baseCost: 50, power: 1, desc: '–ú—É–¥—Ä–æ—Å—Ç—å —á–µ—Ä–µ–∑ –¥—ã–º' },
    { name: '–ë–∞—Ö–Ω—É—Ç—å –ø–∏–≤–∫–∞', count: 0, baseCost: 100, power: 2, desc: '–ò–Ω—Å–∞–π—Ç—ã –ø–æ–¥ –≥—Ä–∞–¥—É—Å–æ–º' },
    { name: '–ù–∞–æ—Ä–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É', count: 0, baseCost: 500, power: 10, desc: '–ú–æ—Ç–∏–≤–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å—Ç—Ä–∞—Ö' },
    { name: '–í—Ä–µ–∑–∞—Ç—å –°–ï–û', count: 0, baseCost: 2000, power: 50, desc: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ö–∞–æ—Å–∞' }
];

const productCount = document.getElementById('product-count');
const clickPowerDisplay = document.getElementById('click-power');
const passiveIncomeDisplay = document.getElementById('passive-income');
const upgradeGrid = document.getElementById('upgrade-grid');
const statusText = document.getElementById('status');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏–π
function initUpgrades() {
    upgradeGrid.innerHTML = '';
    upgrades.forEach((upgrade, index) => {
        const card = document.createElement('div');
        card.className = 'upgrade-card';

        const name = document.createElement('h3');
        name.textContent = `${upgrade.name} (x${upgrade.count})`;

        const desc = document.createElement('p');
        desc.textContent = upgrade.desc;

        const cost = document.createElement('p');
        cost.textContent = `–°—Ç–æ–∏–º–æ—Å—Ç—å: ${upgrade.baseCost} üíº`;

        const btn = document.createElement('button');
        btn.textContent = '–ö—É–ø–∏—Ç—å';
        btn.addEventListener('click', () => buyUpgrade(index));

        card.appendChild(name);
        card.appendChild(desc);
        card.appendChild(cost);
        card.appendChild(btn);
        upgradeGrid.appendChild(card);
    });
}

// –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ
document.getElementById('click-btn').addEventListener('click', () => {
    products += clickPower;
    updateDisplay();
    showStatus(`‚ú® +${clickPower} –ø—Ä–æ–¥—É–∫—Ç–æ–≤!`, 1000);
});

// –ü–æ–∫—É–ø–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è
function buyUpgrade(index) {
    const upgrade = upgrades[index];
    if (products >= upgrade.baseCost) {
        products -= upgrade.baseCost;
        upgrade.count++;
        upgrade.baseCost = Math.floor(upgrade.baseCost * 1.6);
        passiveIncome += upgrade.power;
        updatePassiveIncome();
        updateDisplay();
        initUpgrades();
        showStatus(`üë©üíª –ö—É–ø–ª–µ–Ω ${upgrade.name}`, 1500);
    } else {
        showStatus(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è ${upgrade.name}`, 1500);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
function updatePassiveIncome() {
    passiveIncome = upgrades.reduce((sum, u) => sum + u.count * u.power, 0);
    passiveIncomeDisplay.textContent = `üß† –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–æ—Ö–æ–¥: ${passiveIncome} –ø—Ä–æ–¥—É–∫—Ç–æ–≤/—Å–µ–∫`;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function updateDisplay() {
    productCount.textContent = `üì¶ –ü—Ä–æ–¥—É–∫—Ç—ã: ${Math.floor(products)}`;
    clickPowerDisplay.textContent = `‚ö° –°–∏–ª–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${clickPower}`;
}

// –¢–∏–∫ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
setInterval(() => {
    products += passiveIncome;
    updateDisplay();
}, 1000);

// –°—Ç–∞—Ç—É—Å
function showStatus(message, duration) {
    statusText.textContent = message;
    setTimeout(() => {
        statusText.textContent = 'üì¢ –õ–µ–Ω–∞ –≤—Å–µ–≥–¥–∞ –∑–Ω–∞–µ—Ç, –∫–∞–∫ –¥–æ–±–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞!';
    }, duration);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
initUpgrades();
updatePassiveIncome();
updateDisplay();
